/* ----------------------------------------------------------------------------
 * This file was automatically generated by SWIG (http://www.swig.org).
 * Version 3.0.12
 *
 * Do not make changes to this file unless you know what you are doing--modify
 * the SWIG interface file instead.
 * ----------------------------------------------------------------------------- */

package org.doubango.tinyWRAP;

/*
    static const fmtp_size_t fmtp_sizes[] = {
    {"2160P", tmedia_pref_video_size_2160p, tsk_false, 3840, 2160},
    {"1080P", tmedia_pref_video_size_1080p, tsk_false, 1920, 1080},
    {"16CIF", tmedia_pref_video_size_16cif, tsk_true, 1408, 1152},
    {"720P", tmedia_pref_video_size_720p, tsk_false, 1280, 720},
    {"XGA", tmedia_pref_video_size_xga, tsk_false, 1024, 768},
    {"480P", tmedia_pref_video_size_480p, tsk_false, 852, 480},
    {"WVGA", tmedia_pref_video_size_wvga, tsk_false, 800, 480},
    {"SVGA", tmedia_pref_video_size_svga, tsk_false, 800, 600},
    {"4CIF", tmedia_pref_video_size_4cif, tsk_true, 704, 576},
    {"VGA", tmedia_pref_video_size_vga, tsk_false, 640, 480},
    {"HVGA", tmedia_pref_video_size_hvga, tsk_false, 480, 320},
    {"CIF", tmedia_pref_video_size_cif, tsk_true, 352, 288},
    {"QVGA", tmedia_pref_video_size_qvga, tsk_false, 320, 240},
    {"QCIF", tmedia_pref_video_size_qcif, tsk_true, 176, 144},
    {"SQCIF", tmedia_pref_video_size_sqcif, tsk_true, 128, 96}
    };
 */
public enum tmedia_pref_video_size_t {
  tmedia_pref_video_size_sqcif,
  tmedia_pref_video_size_qcif,
  tmedia_pref_video_size_qvga,
  tmedia_pref_video_size_cif,
  tmedia_pref_video_size_hvga,
  tmedia_pref_video_size_vga,
  tmedia_pref_video_size_4cif,
  tmedia_pref_video_size_wvga,
  tmedia_pref_video_size_svga,
  tmedia_pref_video_size_480p,
  tmedia_pref_video_size_xga,
  tmedia_pref_video_size_720p,
  tmedia_pref_video_size_16cif,
  tmedia_pref_video_size_1080p,
  tmedia_pref_video_size_2160p;

  public final int swigValue() {
    return swigValue;
  }

  public static tmedia_pref_video_size_t swigToEnum(int swigValue) {
    tmedia_pref_video_size_t[] swigValues = tmedia_pref_video_size_t.class.getEnumConstants();
    if (swigValue < swigValues.length && swigValue >= 0 && swigValues[swigValue].swigValue == swigValue)
      return swigValues[swigValue];
    for (tmedia_pref_video_size_t swigEnum : swigValues)
      if (swigEnum.swigValue == swigValue)
        return swigEnum;
    throw new IllegalArgumentException("No enum " + tmedia_pref_video_size_t.class + " with value " + swigValue);
  }

  @SuppressWarnings("unused")
  private tmedia_pref_video_size_t() {
    this.swigValue = SwigNext.next++;
  }

  @SuppressWarnings("unused")
  private tmedia_pref_video_size_t(int swigValue) {
    this.swigValue = swigValue;
    SwigNext.next = swigValue+1;
  }

  @SuppressWarnings("unused")
  private tmedia_pref_video_size_t(tmedia_pref_video_size_t swigEnum) {
    this.swigValue = swigEnum.swigValue;
    SwigNext.next = this.swigValue+1;
  }

  private final int swigValue;

  private static class SwigNext {
    private static int next = 0;
  }
}

